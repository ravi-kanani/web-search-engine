home articles podcast tabletop graphic design about menu home articles podcast tabletop graphic design about balancing multiplayer games, part 2: viable options august 15, 2014 in the previous article i divided the idea of balance into the two sub-concepts of viable options and fairness. i also defined the concepts of symmetric and asymmetric games, where the more varied the different starting options are that must be fair against each other, the more asymmetric the game is. how do we make sure we have enough viable options during gameplay? yomi layer 3 the worst thing you can have in a competitive multiplayer game is a dominant move (or weapon, character, unit, whatever). i don’t mean a move that is merely good, i mean a move that is strictly better than any other you could do, so its very existence reduces the strategy of the game. a dominant move also probably has no real counter, so even if the opponent knows you will do it, there’s not a lot they can do. to protect against dominant moves, we should be aware of the concept of yomi layer 3. i wrote a chapter in my book about it, but i’ll quickly summarize it here. “yomi” is the japanese word for “reading,” as in reading the mind of the opponent (and it’s also the name of my strategy card game). if you have a powerful move and use it against an unskilled opponent, i call that yomi layer 0, meaning neither player is even bothering with trying to know what the opponent will do. at layer 1, your opponent does the counter to your move because they expect it. at layer 2, you do the counter to their counter. at layer 3, they do the counter to that. let's look at an example of a yomi layer 3 situation in street fighter hd remix. honda wants to do his torpedo move get close to ken, but ken throws fireballs to prevent this. i gave honda the ability to destroy these fireballs with his torpedo, but only with the jab version of the move that doesn’t travel very far. if honda can destroy a fireball with it and end up closer, that’s good for him. another similar option is that honda can do his flying buttslam move to avoid ken's fireball and land on him. ken can counter either of those by not throwing the fireball in the first place and letting honda do the jab torpedo or buttslam. as honda is moving forward with his jab torpedo, ken can walk forward and sweep, hitting the recovery of the jab torpedo. against a buttslam, ken might walk backward a little bit, then sweep to hit the recovery. i did not need to add anything to allow for yomi layer 4 though because honda can counter ken’s wait-and-sweep options by simply doing the original, full-screen torpedo. yomi layer 4 tends to wrap around like this in competitive games. summary of the options: honda: torpedo that goes far -or- jab torpedo that destroys fireballs / buttslam ken: fireball -or- wait and sweep this type of thing is very common in just about any competitive game. to put it more generally, you and your opponent each have two options: you: a good move and a 2nd level counter opponent: a counter to your good move and a counter to your counter the designer generally does not need to design yomi layer 4 because at that point, you can go back to doing your original good move. the yomi layer concept is a reminder that moves need to have counters. if you know what the opponent will do, you should generally have some way of dealing with that. as you go through development of a game, ask yourself if various gameplay situations you find yourself in support yomi layer 3 thinking. if they don’t there might be a dominant move in there somewhere, which is bad. local vs. global balance does every possible situation in a game need to support yomi layer 3? answer: no. does every possible situation in a game even need to be fair to both players? answer: definitely not. remember that i defined fairness by the overall chance of winning, given different starting options. think of that as a global term, in that it applies to the game as a whole from the start of gameplay until someone wins. but the local level, meaning a particular situation in the middle of gameplay, does not need to be fair. even symmetric games like chess are supposed to have unfair situations. when you have 3 pieces left and the other guy has 9 pieces left, it’s supposed to be unfair to you. or in starcraft, if we find that two zealots beat (or lose to) 8 zerglings—even though they cost the same resources to make--that is perfectly fine. we don’t care if local situations like that are unfair or not, we only care if protoss is fair against zerg. checkmate situations i call a situation a checkmate situation if it means that one player has almost certainly won, even though the game isn’t actually over. for example in super street fighter 2 turbo, if honda lands his deadly ochio throw against guile in the corner, he can then follow up with a series of moves (involving more ochio throws) that virtually guarantee victory. human error could change the outcome, but as soon as you see that first move, you know it should be a checkmate. are checkmate situations ok? they clearly violate our requirement that there be many viable moves (honda really only has one option here and guile has no good options). they clearly violate the concept of yomi layer 3. and yet, the answer is that checkmate situations can be ok. it’s sooooo hard for honda to get close to guile in this match, that if he does, he basically deserves to do 100% damage. all the gameplay that takes place before the checkmate is pretty good, and even though honda can do this abusive thing up close, the match is still heavily in guile’s favor overall. i’d like to point out the other side of this argument though. some players think that even though guile has the advantage in this match, honda’s ability to repeat that ochio throw is too degenerate. they say yes he needs it to win, but the game would be better overall if things weren’t so extreme. if only honda could get close to guile a little more easily, then he would not need a checkmate situation. i think rob pardo, vp of game design at blizzard, echoed this sentiment in a lecture he gave at the game developer’s conference on multiplayer balance. he said that “super weapons” in real-time strategy games are generally a bad idea. they leave the victim feeling that there is nothing they could have done (checkmate!). he explained that even though the terran nuclear missile in starcraft looks like a super weapon, it has many built-in weaknesses: a ghost unit must be nearby the victim’s base, there is a red targeting dot on the victim’s base, and a 10 second countdown is announced to the victim, giving him time to destroy the ghost to prevent the nuclear missile. pardo has a good point and so did the players who complained about honda. even though i think checkmate situations can be ok, it’s telling that when it was my turn to make the decisions, i removed honda’s checkmate situation in street fighter hd remix. in that game, i gave him an easier time getting close to guile, but replaced his checkmate situation with a yomi layer 3 situation so there’d be more viable decisions throughout the match. lame-duck situations lame-duck situations are just like checkmate situations, but with one difference: time. honda’s checkmate situation takes something like three seconds to get through. but consider a similar situation in the fighting game marvel vs. capcom 2. in that game, each player has a team of three characters: one on the playfield and two on the bench. players can call in one of their benched characters for an assist move at any moment, letting them attack in parallel with their main character and assist character at the same time. or better yet, they can stagger the attacks so that each attack covers the recovery period of the other. when one player is down to their last character, they can no longer call assists. fighting with just one character against an opponent with two or three characters might as well be checkmate, almost all the time. the problem is that it takes excruciatingly long for the match to actually end. it takes so long, that i call that last portion of the game the lame-duck portion. other fighting games are exciting right up to the last moment, but a lame-duck portion of gameplay means the real climax is somewhere in the middle, and then players are forced to act out a mostly pointless endgame while spectators lose interest. yes, on rare occasions someone pulls off an amazing comeback, comebacks also happen in games without lame-duck endings, so that’s not a good argument. the lame-duck situation was specifically addressed in marvel vs. capcom 3 by adding the x-factor mechanic. that's a mode you can activate once per game that powers you up a huge amount for several seconds. it powers you up more the fewer characters you have left. activating x-factor when you're down to your last character is so powerful that you can reasonably hope to defeat one or two of the opponent's characters before your x-factor runs out. while a checkmate situation is maybe ok, you should try to avoid game designs that allow for long lame-duck endings. both chess and starcraft have this undesirable property, and it just means that players often concede the game before the actual end. those games also show that it’s not the worst thing in the world to have lame-duck endings (because chess and starcraft are still good games), but you should still avoid them as a designer if at all possible. chess 2 avoids almost all those lame duck situations with the inclusion of the midline invasion rule. that rule is an alternate win condition: if you cross the midline of the board with your king, you win. if you are really so far behind that you can't reasonably come back by checkmate, then the opponent will probably have already won by midline invasion. furthermore, it's easier to make a comeback when that rule exists than if it didn't, so we both eliminated lame-duck situations and allowed for more exciting comebacks with a single new rule. explore the design space design space is the set of all possible design decisions you could possibly make in your game. whether your game is symmetric or asymmetric, it’s usually a good idea for your game to touch as many corners of the design space as possible. this helps give a game depth and nuance, but also tends to protect you from dominant moves. for example, in the virtual card game i designed called kongai, each character has four moves. when a move hits, it has a percentage chance to trigger an effect. for a given character, we could vary the damage, speed, and energy cost to come up with four different moves. if that’s all we did, though, we’d be missing out on a chance for more diversity in the game, and we’d get dangerously close to making some of those moves strictly better than others which would reduce the number of viable options. instead, i tried to explore the design space as much as possible with different effects. one move can change the range of the fight from close to far, which is usually only possible before the attack phase. another move deals enough damage to kill every character in the game, but only four turns after you hit with it. another move can hit characters who switch out of combat, even though switching out usually beats all attacks. the point is that by exploring the design space as much as possible, it’s a lot harder for players to judge the relative value of moves. how good is a 90% chance to change ranges during combat as opposed to a 95% chance to hit a switching opponent with a weak move? it’s hard to say and depends on a lot of factors, and that’s good because it means each move is likely to be useful in some situation and knowing when is an interesting skill to test. incidentally, i call that skill valuation. players want you to explore the design space, too. when everything is too similar in a game, it feels like one-note design rather than a symphony. the more nuances and different choices you present, the more each player can express his own playstyle. wheat from the chaff here’s my favorite quote from strunk & white’s the elements of style: omit needless words vigorous writing is concise. a sentence should contain no unnecessary words, a paragraph no unnecessary sentences, for the same reason that a drawing should have no unnecessary lines and a machine no unnecessary parts. this requires not that the writer make all his sentences short, or that he avoid all detail and treat his subjects only in outline, but that every word tell. treat your game design the same way. yes you should explore the design space, but omit needless words, mechanics, characters, and choices. although your primary goal regarding viable options is to make sure you’re giving the player enough options, your secondary goal should be to eliminate all the useless ones. marvel vs. capcom 2 has 54 characters, which is ridiculously many. how many are viable in a tournament? i’ll say 10, and i’m being generous. i actually call that a success because coming up with 10 characters in fighting game that are fair against each other is really hard. that said, it does look pretty bad to have more than four times that many characters sitting around in the garbage pile of non-viable choices. compare this to super street fighter 2 turbo’s 16 characters, almost all of which are tournament viable; or guilty gear’s 23 characters, almost all of which are viable; or yomi's 20 characters, all of which are tournament viable, and you see what a compact design looks like. one genre of game is notable for intentionally creating an enormous number of useless options: collectable card games. even though magic: the gathering has many good design concepts and several viable decks at any given time, when we judge it on how much chaff it has—cards/decks that aren't viable in the tournament environment—it's one of the worst situations of just about any game. mtg’s mark rosewater defends the intentional inclusion of bad cards for design reasons, but really it's entirely marketing driven. their business is to put a collectable barrier between you and the the cards you want so as to sell more packs of those cards. that means mountains of chaff cards are inventible. i think even one single chaff card is a problem that would ideally be fixed, but rosewater claims that bad cards are ok because they: a) allow for interesting experimental mechanics that might end up being bad b) test valuation skills because if all cards were equally good, there’d be less strategy c) give new players the joy of discovering that certain cards are bad, as a stepping stone to learning the game d) are necessary because even if they came out with a set that consisted entirely of known good cards from old sets, there’d still be only 8 tournament viable decks and the rest of the cards would not be used. the solution to this problem is clear if we only cared about design and not rip-off marketing: print fewer cards. reason a) is a great one, experimental cards that end up accidentally bad are fine. reasons b) and c) are just silly. saying the game would not have enough strategy if bad cards were removed is an insult to mark’s own game. saying that new players need to discover the intentionally bad cards is even more silly because this comes at the cost of making sets overwhelming to new players and needlessly unwieldy for expert players. we all know the real reasoning here is to make players buy more random packs of cards to get at the few good ones. finally, reason d) is a blatant admission that the game should have fewer cards. ironically, i’m not even sure d) is true. maybe printing a large set of all good cards really would lead to more viable tournament decks than the game currently supports. if not though, they should stop printing all that chaff. here's an example of a card that doesn't need to printed: you could say that mtg proves that it’s really all about chaff, though. giving a few viable options amidst a sea of bad ones is probably good business when you sell by the pack. but we don’t see this in other genres and really we just haven’t seen anyone crazy enough to stand up to mtg on this issue and offer a competing card game that’s just as well designed but that eliminates all chaff. (disclosure: codex is that game and is in development now.) league of legends is also notable for its chaff, though to a lesser extent than magic: the gathering. when you sell by the character, it's hard not to make more and more characters forever—way more than would make sense to try to balance. such a game might only need 30 characters to cover all necessary archetypes and it could then be balanced really well. when you go past 100 in such a game, you then need a bandaid system of character bans at the top end and you're practically guaranteed to have a bunch of chaff characters at the bottom end. but it sure would make more money to sell 100 characters rather than 30. lots of chaff and/or having to ban characters routinely is pretty ugly design. double-blind guessing i used the technique of double-blind guessing in both my yomi card game and my kongai virtual card game (that one’s actually a turn-based strategy game dressed up like a card game). anyway, the idea is to make all players commit to a choice before they know what the others have committed to. this is the same setup as the prisoner’s dilemma. i learned this concept from fighting games. though they appear to be games of complete information because you can see everything the opponent can see, fighting games are actually double-blind games. they come down to very precise timing and the moment you jump, you often don’t know that the other guy threw a fireball. you only know that 0.3 or 0.5 seconds ago he didn’t. it takes a small amount of time for the opponent’s move to register in your brian, and though it might seem insignificant, it’s actually critical to fighting games even working as strategy games at all. real-time strategy games like starcraft have the same property, but on a much slower time-scale. you often do not know exactly what the opponent is building in his base at the moment you must decide what you should build. even if you were able to scout his base, you might be working on information that’s several seconds old, so you have to guess what he did during that time. if we were to remove the double-blind nature from my two card games yomi and kongai, and from fighting games and real-time strategy games, i think all of them would be broken. all those games need double-blind decision-making to be interesting. this design pattern is a way to increase the chances that you have many viable moves in your game because it naturally forces players into the yomi layer 3 concept i talked about earlier. weaker moves become inherently better in a double-blind game because it’s easier to get away with doing them without being countered. i’ve even joked that some matches between the world’s best virtua fighter players are “a battle of the third-best moves.” sometimes the players are so paranoid about doing their “best” option for fear of being countered, they fall back on a third best option that no one would ever counter (though it’s quite a sight when the opponent counters even that!). if no guessing was involved at all, players would not use third-best moves. playtesting finally, playtesting, especially with experts, is how you figure out where your problems really are. do the experts ignore some vast portion of you game’s moves? have they discovered a bunch of checkmate situations that you didn’t know about? do you see them using a variety of strategies? how to use playtests is really a whole topic of its own, but here’s a few points to keep in mind. first, be skeptical of them. gamers tend to overreact to changes and claim that no counters exist to some strategies when counters do, in fact, exist. it can take years to sort out what is really effective in a game, and playtesters during your beta are only on the first few steps of that long journey. if they find what looks like the best strategy in the game, it might just be that they have found a local-maximum. maybe some radically different way of playing that they have not yet discovered ends up being more powerful. this is actually par for the course in fighting games and it hasn't been much different in my work on tabletop games, either. that said, playtests are really all you have. theory is not a substitute for experts playing against each other and trying their hardest to win. i think everyone knows they need playtests, but the hardest question is who do you listen to when all your playtesters disagree, and how do you know when playtesters are wrong about how powerful something is? that question is so hard that i’ll save it for part 4 of this series when i tell you how much trouble we’re really in trying to balance a game at all. conclusion to ensure we have many viable options, building in counters with the yomi layer 3 system is a good start. not all situations need this though, and checkmate situations might be acceptable, but you should avoid their their longer cousins, lame-duck situations, if possible. explore your game’s design space by offering moves as different as possible because this technique has a good chance of making all moves useful somewhere and it makes it very difficult to determine what the best moves really are. that becomes an interesting skill test for players. eliminate all the worthless options because they confuse the player and add nothing, but they make you a lot of money in a certain genre. the double-blind guessing mechanic helps keep more moves viable than otherwise would be. and finally, all the theory in the world does not substitute for playtesting. tags set1 ← balancing multiplayer games, part 1: definitionsbalancing multiplayer games, part 3: fairness → best of sirlin.net playing to win book codex design (23 articles) designing pandante blivand design designing yomi game balance and yomi designing puzzle strike street fighter hdr articles balancing puzzle fighter solvability slippery slope subtractive design multiplayer game balance: part 1: definitions part 2: viable options part 3: fairness part 4: intuition game balance handout tutorial videos: street fighter tutorial smash bros. brawl tutorial more articles... chat my tabletop games | my online games | playing to win | recommended books | about | contact