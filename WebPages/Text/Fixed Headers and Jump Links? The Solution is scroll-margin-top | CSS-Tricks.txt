skip to main content css-tricks articles videos almanac snippets newsletter jobs guides back to top contact about archives advertise jobs license subscribe forums guest posting facebook twitter youtube instagram rss search for: search open search open navigation home / articles / fixed headers and jump links? the solution is scroll-margin-top author chris coyier 21 comments join conversation published feb 21, 2020 headers links scroll-margin scroll-padding personalized marketing with mailchimp the problem: you click a jump link like <a href="#header-3">jump</a> which links to something like <h3 id="header-3">header</h3>. that's totally fine, until you have a position: fixed; header at the top of the page obscuring the header you're trying to link to! fixed headers have a nasty habit of hiding the element you're trying to link to. there used to be all kinds of wild hacks to get around this problem. in fact, in the design of css-tricks as i write, i was like, "screw it, i'll just have a big generous padding-top on my in-article headers because i don't mind that look anyway." but there is actually a really straightforward way of handling this in css now. h3 {
  scroll-margin-top: 5rem; /* whatever is a nice number that gets you past the header */
} we have an almanac article on it, which includes browser support, which is essentially everywhere. it's often talked about in conjunction with scroll snapping, but i find this use case even more practical. here's a simple demo: codepen embed fallback in a related vein, that weird (but cool) "text fragments" link that chrome shipped takes you to the middle of the page instead, which i think is nice. our learning partner need some front-end development training? frontend masters is the best place to get it. they have courses on all the most important front-end technologies, from react to css, from vue to d3, and beyond with node.js and full stack. need some front-end development training? frontend masters is the best place to get it. they have courses on all the most important front-end technologies, from react to css, from vue to d3, and beyond with node.js and full stack. comments builtinoneday permalink to comment# february 21, 2020 i am showing that you can not use scroll-margin on any ie or edge. am i missing something? https://caniuse.com/#search=scroll-margin reply chris coyier permalink to comment# february 21, 2020 am i missing something? do you mean, like, you’d never consider using this because that chart says ie isn’t supported? if so, fair enough, some people have a lot of ie 11 users still and can’t ignore that. edge is an evergreen browser though and has gone chromium and it “works on my machine”: so maybe the charts are wrong. thomas higginbotham permalink to comment# february 24, 2020 most windows users still don’t have chromium edge. you either have to manually download the new version or wait for it to arrive via windows update, and it seems they are doing a phased roll-out. my work laptop shows that it’s currently up to date, but it still has the older edge. however, considering that it will likely be rolled out to everyone in the coming months, it’s a moot point, especially considering how long we’ve had to deal with fixed headers covering up in-page links. i’m very happy to have this new css rule. covetech permalink to comment# february 25, 2020 awesome find. i hate using fixed menu’s because of this. michael whyte permalink to comment# february 21, 2020 is this supposed to work on mobile safari? i just tried the codepen demo on ios safari (iphone 11 pro) and the headings were still covered by the fixed header… regardless…awesome tip…will try it on a desktop browser when i have a chance… reply jonny-b-good permalink to comment# february 22, 2020 works fine on firefox for android here. paul o'brien permalink to comment# february 23, 2020 it doesn’t seem to work (or be supported) in my safari mac (v13) and doesn’t work in latest edge for me either (not that it’s a big problem as the method does no harm). the method won’t be much good for responsive (fixed or sticky) headers where text wraps or content adjusts on screen width (or text zoom) so use cases will have to be properly managed. it’s a useful method though for small fixed height headers so thanks for the tip :). andrei stoicescu permalink to comment# february 24, 2020 i can’t get that to work either. i’m using mobile safari on (currently latest) ios 13.3.1. dakur permalink to comment# february 25, 2020 no, it does not, even though caniuse says you can. i was fiddling with this a lot but i ended up with filling a bug to browser-compat-data: https://github.com/mdn/browser-compat-data/issues/4945 (more info there) it’s a great feature, but until safari fix it, still you can’t use it if you need to support safari and probably need some hacks like negative top offset on ::before josh dreier permalink to comment# february 21, 2020 props to miriam, i remember she tweeted about this the other day and you were astonished this existed. i was too. reply thomas hartmann permalink to comment# february 22, 2020 ooh, this is neat. so to achieve something similar to chrome’s text fragment links, you can set scroll-margin-top: 50vh? don’t know if you’d ever actually want that, but it’s good to know! reply fritz permalink to comment# february 22, 2020 is it supposed to work in edge and ie11? caniuse.com says “no”. is there a polyfill or workaround? reply jakob e permalink to comment# february 22, 2020 @chris thanks for sharing – this is regarding the text fragment do you have info on how this can be implemented without breaking anchor navigation on older (almost all) browsers? the specs 4.3 describes a fallback if the document has changed but that does not solve the underlying problem of this not being backward compatible. i hope i am mistaken :) reply a.j. kandy permalink to comment# february 24, 2020 this doesn’t work on opera for windows. (you probably guessed that already, but just reporting from the field. :) reply florian permalink to comment# february 25, 2020 this doesn’t seem to be adhered to when you tab through the page using your keyboard. shouldn’t scroll-margin/padding be applied there too? reply miriam suzanne permalink to comment# february 25, 2020 scroll-padding is also worth a mention here, and a bit better suited to this particular use-case. you apply it to the scroll-container rather than the target elements. i use scroll-padding when everything in a container needs to be offset, and scroll-margin for individual target offsets. reply filipe permalink to comment# february 26, 2020 for those complaining about lack of ie11 support or that chromium edge isn’t on every computer: this doesn’t take away from the experience, it only enhances up-to-date browsers. so what exactly are you complaining about? reply corey permalink to comment# february 26, 2020 would be great to have this work for non-fixed height headers.. something like: .h3 {
  scroll-margin: element(#header)
}
 which would adjust the margin automatically based on the current height of the #header element. reply jean ceugniet permalink to comment# february 28, 2020 the support is not quite universal right now, but already pretty good. thanks for this nice trick ! reply sven wolfermann permalink to comment# february 28, 2020 is this clever or do i miss something? html {
  height: 100%;
  scroll-padding-top: var(--header-height, 5rem);
  scroll-behavior: smooth;
}

:target {
  scroll-margin-top: 1rem;
}
 sadly safari does not support scroll-margin outside scroll-snapping containers. reply sven wolfermann permalink to comment# march 25, 2020 we could immitate this margin effect for oldie too: :target::before { content: ""; display: block; position: relative; bottom: 0; width: 0; height: 5rem; /* height of the header */ margin-top: -5rem; } reply leave a reply cancel reply your email address will not be published. required fields are marked * comment name * email * website save my name, email, and website in this browser for the next time i comment. get the css-tricks newsletter notify me of follow-up comments by email. copy and paste this code: micuno * leave this field empty all comments are held for moderation. we'll publish all comments that are on topic, not rude, and adhere to our code of conduct. you'll even get little stars if you do an extra good job. you may write comments in markdown. this is the best way to post any code, inline like `<div>this</div>` or multiline blocks within triple backtick fences (```) with double new lines before and after. want to tell us something privately, like pointing out a typo or stuff like that? contact us. we have a code of conduct. be cool. be helpful. the web is a big place. have fun. high five. related how do you stay up to date in this fast⁠-⁠moving industry? a good start is to sign up for our weekly hand-written newsletter. we bring you the best articles and ideas from around the web, and what we think about them. email address subscribe facebook @csstricks twitter @css youtube @realcsstricks instagram @real_css_tricks rss feed css-tricks* is created, written by, and maintained by chris coyier and a team of swell people. the tech stack for this site is fairly boring. that's a good thing! i've used wordpress since day one all the way up to v17, a decision i'm very happy with. i also leverage jetpack for extra functionality and local for local development. *may or may not contain any actual "css" or "tricks". other nav contact about guest writing jobs advertise license subscribe all authors codepen codepen is a place to experiment, debug, and show off your html, css, and javascript creations. flywheel logo flywheel css-tricks is hosted by flywheel, the best wordpress hosting in the business, with a local development tool to match. shoptalk is a podcast all about front-end web design and development. css-tricks presents 📅 upcoming front-end conferences css-tricks presents the power of serverless for front-end developers