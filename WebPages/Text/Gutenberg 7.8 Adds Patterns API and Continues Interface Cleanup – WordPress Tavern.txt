skip to content wordpress tavern · wordpress news — free as in beer. search for: open menu navigation about contact comment policy news opinion plugins themes events gutenberg 7.8 adds patterns api and continues interface cleanup justin tadlock · march 26, 2020 · 9 comments version 7.8 of the gutenberg plugin landed yesterday. the team continues to improve the editor with the refreshed interface work that began in version 7.7. the most useful feature with this update of the plugin is the inclusion of the patterns api for plugin and theme developers. this release is not the massive feature release that we experienced with some earlier versions. it is the culmination of many smaller improvements, particularly with improving the user interface and experience. the update includes over 20 bug fixes, some continued work on experimental features like the site editor, and several improvements in code quality. editing a post permalink without requiring a save should work correctly, which has been an outstanding issue for over a year. users can now select multiple categories for the latest posts block as opposed to a single category. and, the experimental full-site editing feature now supports fullscreen mode. ui continues improving gutenberg 7.8 editor with updated preview button. the team began a massive refresh of the user interface in gutenberg 7.7. with this release, they continued building upon that initial work. designers have fine-tuned several of the icons for the editor toolbar, which includes the bold, italic, strikethrough, indent, outdent, and spacer icons. one of the most notable differences is an update to the user-facing text for the post preview button. in the previous version, there was a button that simply read “desktop.” once clicked, it would open a drop-down list to preview the post in desktop, tablet, or mobile mode. i had initially thought the team had removed the post preview option until i clicked on it. in version 7.8, that button’s text now reads “preview,” which is a much-needed change that is no longer confusing. overall, the polishing work done on the editor looks good. at this point, i have become so accustomed to it that i have no desire to go back to a regular wordpress install without the gutenberg plugin installed. building custom block patterns custom block pattern registered and in use. i have said it before, but it bears repeating: i am excited about block patterns. i am even more excited about the ability for plugin and theme authors to begin testing this feature by building custom patterns of their own. i foresee an explosion of creativity over the next several months and beyond. patterns are a registration of the html for one or more blocks. plugin and theme authors can further define the settings for those blocks. the gutenberg team included a simple php function for developers to register custom patterns called register_pattern(). i have tinkered with numerous pattern ideas since i updated yesterday evening. the simplest way to build a pattern is to do so visually. open the editor and create a unique group of blocks that you like. then, switch to the code editor and copy the code. from that point, you can register the pattern via php and paste the copied code. there is not really much actual coding involved in the process. even advanced users with enough diy grit could register them within their theme’s functions.php file. the following is a simple “hero” pattern as shown in the above screenshot that uses the cover block, a heading, a paragraph, and a buttons group (i formatted the code a little after copying and pasting for readability): add_action( 'init', function() {

	register_pattern( 'tavern/hero-1', [
		'title'   => __( 'hero 1' ),
		'content' =>
			'<!-- wp:cover {"customoverlaycolor":"#273f60","align":"full"} -->
			<div class="wp-block-cover alignfull has-background-dim" style="background-color:#273f60">
				<div class="wp-block-cover__inner-container">
					<!-- wp:heading {"align":"center"} -->
					<h2 class="has-text-align-center">heading title here</h2>
					<!-- /wp:heading -->

					<!-- wp:paragraph {"align":"center"} -->
					<p class="has-text-align-center">lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
					<!-- /wp:paragraph -->

					<!-- wp:buttons {"align":"center"} -->
					<div class="wp-block-buttons aligncenter">
						<!-- wp:button {"classname":"is-style-outline"} -->
						<div class="wp-block-button is-style-outline"><a class="wp-block-button__link">button a</a></div>
						<!-- /wp:button -->
						<!-- wp:button {"classname":"is-style-outline"} -->
						<div class="wp-block-button is-style-outline"><a class="wp-block-button__link">button b</a></div>
						<!-- /wp:button -->
					</div>
					<!-- /wp:buttons -->
				</div>
			</div>
			<!-- /wp:cover -->'
	] );
} ); disclaimer: the preceding code is for an experimental feature and could change in later versions of the gutenberg plugin or before the api is officially added to core wordpress. share this: click to email this to a friend (opens in new window) click to share on facebook (opens in new window) click to share on twitter (opens in new window) click to share on telegram (opens in new window) click to share on whatsapp (opens in new window) click to share on pocket (opens in new window) click to share on reddit (opens in new window) like this: like loading... posted in news, plugins tagged gutenberg 9 comments profitpress march 26, 2020, 5:13 pm · reply justin, i love your continued coverage on gutenberg’s evolution. it’s quite incredible how quickly the experience is evolving. i’ve frequently wondered why it’s so hard for us as a community to extrapolate gutenberg’s trajectory and imagine how it’ll change wordpress, but the coiv-19 outbreak has given me some insight. if you’ve been around wordpress for any length of time, you have your go-to theme, plugins and page builder. and it’s likely that your toolbox has probably been consistent for quite a long time. why? because wordpress moves pretty slowly and not much changes. we haven’t evolved to think about wordpress as a fast changing, innovative system. but now, the assumptions that our workflows are predicated on are changing more quickly and more dramatically than they ever have before. this is just like humans. we didn’t evolve to understand things like exponential growth because nothing our ancestors encountered grew exponentially. in fact, for most of human history nothing changed at all–you could live your whole life with nothing new discovered or invented. this is how our life has been for our ancestors for most of humankinds ~200,000 year history up until the last thousand years or so. fast growth, and especially exponential growth, are hard for the human brain tom imagine. for instance, a common example: if a species of lily pad reproduces every day, how many days before the pond is covered with lily pads was half the pond covered? the day before. and a few days before that the lily pads would probably go largely unnoticed. that’s why covid-19 caught so many by surprise. and though the gutenberg improvement isn’t quite exponential, that’s why so many are consistently surprised (and will continue to be) by the rate of improvement of gutenberg. this is especially true once we grok that gutenberg is so much more than an editor. for example, i just saw this post today: https://www.codeinwp.com/blog/plugin-options-page-gutenberg/ in it they talk about making plugin options pages with gutenberg components. the farther along it gets, the less sense it makes to use anything but gutenberg for more and more. the efficiency and performance from consolidating foundational components is hard to beat. it’s really not a question of “if” gutenberg will replace x, but when. loading... report nick march 26, 2020, 5:26 pm · reply your example code (above) works like a charm. until now, i was using the editorskit block(s) json export function, which in return, once a person gets a hold of the export file, all they have to do is drag and drop the file on the editor, that’s it… with this solution though, people would have to download the json files from my website manually… with the native patterns though, all i have to do is include them in a plugin or theme, so it’s a big time saver for the end users, and at the same time making the solution more professional. thanks again justin ! loading... report nick march 26, 2020, 6:04 pm · reply quick update: the block patterns also work with dynamic blocks, so we can use them with acf blocks. loading... report marcus tibesar march 26, 2020, 5:44 pm · reply block patterns are so useful! my fear is future development will break patterns used throughout a site. loading... report rhys clay march 27, 2020, 12:14 am · reply ive been splitting my time between 3x page builders: 1. elementor 2. gutenberg 3. wp bakery (shudders) i am blown away by how good gutenberg now works, and when im using elementor i find myself at times wishing the site was in gberg! loading... report krishna thakur march 27, 2020, 4:01 am · reply pattern api is a welcome update. after adding few patterns, the pattern section looks crowded. hope in upcoming version there would be some category to organize the paterns. if it’s already there and i have missed it them please guide me. thanks a lot for quick update and follow-up on gutenberg api. these updates are very helpful. loading... report justin tadlock march 27, 2020, 8:10 am · reply for right now, the ui is a little crowded. the team is working toward creating a better experience, but it may be a version or a few down the road before we see that. at the moment, the important thing is making sure the idea works, which is seems to do so well. what i imagine we’ll see soon is something like the block inserter for patterns or that patterns will be integrated into the existing block inserter ui. currently, patterns are held in a sidebar, but that is temporary. loading... report stephen vaughan march 27, 2020, 1:41 pm · reply as an alternative to placing in the functions.php file, i trust you could load these from a custom plugin that you could make yourself so that your chosen patterns would be independent of the theme. i tried out the sample code you posted and while it rendered, the styling as a bit off. the buttons were not correct. perhaps wordpress 5.4 is required? loading... report justin tadlock march 27, 2020, 1:51 pm · reply wordpress 5.4 is not required, but gutenberg 7.8+ is for the pattern to work. this is still very early and experimental at this stage. as for styling, it’s going to come down to whether your theme has the styles built in. the buttons group is a fairly recent addition, so it may not be in all themes yet. loading... report leave a reply cancel reply your email address will not be published. required fields are marked * comment name * email * website notify me of follow-up comments by email. notify me of new posts by email. join the discussion via emailget only replies to your comment, the best of the rest, as well as a daily recap of all comments on this post. no more than a few emails daily, which you can reply to/unsubscribe from directly from your inbox. this site uses akismet to reduce spam. learn how your comment data is processed. recent comments henrico on finding balance in these uncertain times: remote work and sharing our strugglesdespite the threat of the coronavirus an… justin tadlock on finding balance in these uncertain times: remote work and sharing our strugglesbaby boomer is not a slur, and the term… patty on finding balance in these uncertain times: remote work and sharing our strugglesi just would love to never hear that now… justin tadlock on gutenberg 7.8 adds patterns api and continues interface cleanupwordpress 5.4 is not required, but guten… stephen vaughan on gutenberg 7.8 adds patterns api and continues interface cleanupas an alternative to placing in the func… trending gutenberg 7.8 adds patterns api and continues interface cleanup finding balance in these uncertain times: remote work and sharing our struggles block patterns will change everything block-based themes and the problem with dynamic data in html templates yoast publishes free online training course for the block editor how to add subscript and superscript characters in wordpress font awesome releases new covid-19 awareness icons subscribe via email enter your email address to subscribe to this blog and receive notifications of new posts by email. email address subscribe about wp tavern wordpress tavern is a website about all things wordpress. we cover news and events, write plugin and theme reviews, and talk about key issues within the wordpress ecosystem…read more → footer home archives write for us ask the bartender proudly powered by wordpress. twitter facebook instagram send to email address your name your email address cancel post was not sent - check your email addresses! email check failed, please try again sorry, your blog cannot share posts by email. %d bloggers like this: