sign in software data & ml life at expedia group expedia group technology — data how we optimized hero images on hotels.com using multi-armed bandit algorithms fedor parfenov follow mar 19 · 8 min read introducing the multi-armed bandit (mab) optimization used for hero images on hotels.com some properties have a lot of beautiful and interesting images. in this entry, we introduce the multi-armed bandit (mab) optimization campaign we have recently run on hotels.com™. the objective was to find the best possible main image (also called ‘hero image’) for the properties on our website whilst minimizing the impact of exploring different candidates. we will go through some of the main considerations and outcomes of this project. we also plan to publish further deep dives going forward. a key use case images are typically one of the most important aspects to optimize for many web businesses as their customers do not physically interact with a product before purchasing. often, the best impression of an item users can get is an image. this is especially important for hotels.com customers as images are key when choosing a property to stay at, which is driven by a balance between the aesthetically appealing and the practically relevant. however, the large number of images available in our site makes it untenable to manually choose the best images to show to our customers. for this reason, our team has decided to focus on developing computer vision capabilities. over the last 3 years, the team has worked on computer vision algorithms to score property images according to their aesthetic values. the data was obtained through amazon’s mechanical-turk campaigns and previous a/b tests. this has proven to be an extremely powerful way to re-rank the images in the gallery and to select a new hero image, leading to two successful tests. although supervised approaches generalize well, they are impacted by how the data has been generated. indeed, the mechanical turks do not provide the same feedback as our customers and the historical data can be subject to sampling bias (due to the presence of pre-existing business rules when it was generated). to complement the current approach and alleviate those issues, we opted to use multi-armed bandit (mab) algorithms to explore new images using our customers’ feedback. more specifically, we were interested by this natural ability to quickly deactivate suboptimal options while focusing the traffic on more promising ones. a multi-armed bandit approach to optimize images mab algorithms are a well-known and well-documented approach that has shown to be an excellent optimization tool. in summary, mabs are used to explore a set of options with unknown expected outcomes. the objective is to explore each option enough to detect which one maximizes the expected reward, while limiting the amount of regret (opportunity cost) from exploring suboptimal options. this approach is often compared to a/b testing and does share some commonalities. however, it differs in its ability to change the traffic split in order to minimize the cost of exploring (aka regret). a mab algorithm quickly focuses on better options limiting the opportunity cost of exploring suboptimal options (regret). the image optimization use-case is a natural application for this approach. each property is treated as an independent mab problem in which each candidate image is an arm. the objective is to find the best image while minimizing the exposure of poor ones. we define the “best image” as the one that maximizes the click-through rate (ctr) of the property on the search page. the approach can be summarized in 4 key points: for each property we select up to 10 highest ranking images from the existing image ranking algorithm. we enforce some diversity on the images categories (e.g., room, lobby, exterior, etc.). we limit the number of candidates as some properties have a large number of images, which would require significantly more traffic to converge. to balance between exploration and exploitation, we use the thompson sampling algorithm on the property’s ctr, defined as the click to impression ratio. each time a property image is requested, we use the candidate images current ctr to sample a score from a beta distribution, selecting the one with the highest score. we run an independent bandit for each property — resulting in thousands of simultaneous optimizations. once an image has been selected for a user, it will remain the same for this property for the rest of the session and across the website. we believe it’s important to maintain this consistency to avoid confusion. an infrastructure using streaming technologies implementing a mab algorithm presents an interesting infrastructure challenge. we needed a fast and resilient infrastructure that can ingest millions of user feedback messages per hour. we worked closely with our machine learning (ml) engineering team to put together the three main components for a mab infrastructure. namely: parameter store: the central piece of the infrastructure is the database that holds the current hits and misses for each image. this parameter store needs to be queried in real time for each page request so it requires low latency. sampler: this is where the thompson sampling algorithm occurs. the sampler receives a request from the web application with a list of properties, fetches the images clicks and impressions, and samples one image per property. streaming engine: in order to ingest the user feedback from a common streaming tracking queue, we use a streaming engine that will filter, de-duplicate, and send increment messages for the clicks and impressions in the parameter store. the main advantage of this approach is the decoupling between updating the algorithm and sampling random images, making the whole system more resilient. a classic high-level architecture training and testing multi-armed bandits as a campaign we decided to run the image bandits as an optimization campaign. a campaign is a time-limited optimization paired with an a/b test. we limited the bandits in time as adding new images to an ongoing bandit is not a trivial task. running periodic campaigns also enables us to refresh, restart and improve the approach between iterations. another reason to run the bandit algorithm behind an a/b test is that the key performance indicator (kpi) we use to optimize the image (ctr) is different to the kpis on which we evaluate the overall business performance. in order to monitor the latter we run a test that holds out a certain amount of traffic. our mab algorithm was sitting on top of an a/b test so we can monitor the kpi’s impact. the campaign contains two phases: phase i is the exploration phase. most of the traffic is exposed to the bandit and a small holdout to a static control. phase ii is the exploitation and testing phase. we run a classic a/b test to validate the success of the campaign. exploring new images in phase i, we use the bandit to explore the pre-selected candidates. as the algorithm has no information in the first week, it will randomly sample from the list of candidates. as expected, some sub-optimal images will be shown to users leading to a weaker overall performance. the advantage of the bandit algorithm lies in its ability to quickly discard poor options and repurpose new traffic to more promising images, organically converging to better options. to validate this hypothesis we hold out a small percentage of traffic to monitor the impact on the metrics and page kpis we are optimizing. the figure below shows the evolution of the metric of interest over time when comparing the bandit vs control. it highlights the bandit converging, initially displaying worse performance than control and then improving as time progresses, leading to an optimal solution. during phase i, we observed a poor performance at first. then the bandit algorithms progressively learned which images work better and improved the metric. after running the exploration phase for a month, we follow a conservative approach to select new images. we only choose a new image if: 1) it has the highest ctr for the property and 2) we can see a statistically significant improvement over the current featured image. otherwise, we fall back on the featured image. impact and next steps phase ii objective is to validate that this set of new images selected from the exploration phase improves our business kpis. it consists of a classic a/b test with an equal split (variant ‘a’ being users exposed to the current control image; ‘b’ being users exposed to the new images). this phase ran for a couple of weeks and the results exceeded our expectations: the bandit led to not only to an increase in progression, but also to improvements in our main business kpis. additionally, users bounce rate dropped and general user engagement increased. here is an example of images from two properties that have been selected by the owner, the computer vision algorithm and the mab algo, respectively. the users feedback proved to be very helpful to find gems within our image database (right column). while this first iteration can be considered a success, we highlight some limitations: the click-through rate has proven to be a good proxy for overall customer satisfaction. however, it can be biased towards images that could be seen as funny or controversial, which attracts clicks but often doesn’t lead to purchases. in other words, this ‘clickbait effect’ leads to some images being chosen while not improving our customers’ experience. we plan to tackle this problem in two ways: firstly, start incorporating direct feedback from our customers (both travelers and property owners), so they can inform us or directly blacklist images. secondly, using multi-objective metrics that balance more aspects than simply click-through rate. one option can be found in drugan et al. [1]. there is lack of contextualization, as the optimization is happening on a general level. one might want to show different images for different types of customers (e.g., different points of sale and traveling parties). this requires a more complex modelling similar to the seminal approach from li et al.[2]. finally, running the bandit algorithm on the properties with low traffic (long tail) hasn’t shown conclusive results. there is a need for a more general model that will learn general preferences regarding the content and the quality of the images. this could be explored using deep learning in combination with bandits. riquelme et al.[3] present some promising approaches. this project has involved numerous teams across expedia group™ and we want to thank the many people involved. we especially would like to mention: computer vision/machine learning: vasilis vryniotis ml engineering: carlos peña, gyula magyar, bela tanczos, david mogyorosi hotels.com product: humiun miah, hannah wylie, robert griggs references [1] madalina m. drugan, ann nowe “designing multi-objective multi-armed bandits algorithms: a study”, the 2013 international joint conference on neural networks (ijcnn), 2013. [2] lihong li, wei chu, john langford, robert e. schapire, “a contextual-bandit approach to personalized news article recommendation”, proceedings of the 19th international conference on world wide web, pp. 661–670, 2010. [3] carlos riquelme, george tucker, and jasper snoek, “deep bayesian bandits showdown: an empirical comparison of bayesian deep networks for thompson sampling.” in international conference on learning representations, 2018. learn more about technology at expedia group expedia group technology stories from the expedia group technology teams follow 112 data science machine learning multi armed bandit image processing algorithms 112 claps written by fedor parfenov follow lead data scientist @ expedia group follow expedia group technology follow stories from the expedia group technology teams follow write the first response more from medium more from expedia group technology more from expedia group technology managing engineering teams in a fast paced environment paul de lange in expedia group technology mar 17 · 7 min read 32 more from expedia group technology more from expedia group technology disable traffic to a kubernetes application during an incident ori rawlings in expedia group technology mar 3 · 3 min read 53 more from expedia group technology more from expedia group technology responsive accessibility guidelines at expedia.com karli yeoman in expedia group technology feb 27 · 5 min read 41 discover mediumwelcome to a place where words matter. on medium, smart voices and original ideas take center stage - with no ads in sight. watch make medium yoursfollow all the topics you care about, and we’ll deliver the best stories for you to your homepage and inbox. explore become a memberget unlimited access to the best stories on medium — and support writers while you’re at it. just $5/month. upgrade abouthelplegal