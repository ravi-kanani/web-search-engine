skip to content menu make a website start a blog reviews best web hosting wordpress hosting bluehost review hostgator review siteground review inmotion review a2 hosting review website builders wix review shopify review duda review weebly review ecommerce platforms domain registrars webinar software best vpn services resources blog about how to host a website from your computer by jamie web hosting is a service that enables companies and people to make their website accessible via the world wide web. a web host provides the infrastructure and services that a website needs to operate on the web. if you are planning on starting a website, you will need to invest in your own domain name and web hosting. depending on your hosting needs, the costs could run from just $50 (shared hosting) to over $10,000 a year (dedicated server). if you are developing a new website, hosting your own site on a local machine may be the best option. in this article, i will provide you with a detailed review of how to host your site either on a windows or linux system. it is, however, important to note that hosting your site yourself comes with quite a few disadvantages. i will expose you to some of these shortcomings and the available options for solving them. how to host a website using windows hosting a website on your pc can be very interesting. it is recommended that you only opt for this if you want a local development server. a wamp server is the primary necessity to consider for hosting a website on your windows operating system. what is a wamp server? wamp is the contracted form of windows, apache, mysql, and php. a wamp server, therefore, installs three different applications simultaneously. these servers are considered to be quite convenient because they allow you to download and install all the packages necessary for hosting any web content. the elements of wamp can be explained as follows: windows- it shows that the amp applications are compatible with windows devices. other platforms such as linux, for instance, will have it as lamp. apache– this is the core program that performs the hosting services. apache program is very efficient in hosting html files as well as other static web documents. mysql– it offers a database that will contain all your web content. dynamic web pages need to store data from time to time thus require a database. examples of such data include usernames, passwords, and emails. php– this is perhaps the widest spread language for creating dynamic web content. some of the popular websites known to run on php code are facebook and wordpress. step 1: installing the wamp software visit the wampserver website and download the latest version. choose either 32 or 64 bit depending on your operating system. the package comes with the most recent installments of apache, mysql, and php. run the .exe file in the wamp setup you have downloaded. you will receive installation prompts that are straightforward. click “next” while maintaining the default values to continue with the installation. choose the browser of your choice or just hit “open” and the web server will use your default pc browser. as you carry out this process, windows firewall may reject some features of apache. therefore, make sure to make an exception when you receive a security alert pop up. after the installation is complete, mark the box labeled “start wampserver 2 now” before eventually clicking the “finish” button. step 2: navigating the wamp server if you’d like to change the pages displayed by the web server, go to the www directory by clicking the wamp icon in the notification pane. the directory is automatically created during installation and can be found in local disk c (c:\\wamp\\www). you also have the option of creating subdirectories referred to as projects in wampserver. these will come in handy in storing html or php files. if you install wordpress for instance, its installation files will be saved in the directories. you can update any changes within the application by clicking the refresh button. step 3: create an html or php page this section shows you how to test the webserver. use a web development program such as notepad to develop a simple php or html page. go to ‘save as’ and give it any name and add the extension .php (e.g. “name.php”). set c:\\wamp\\www to be the destination of the saved file. return to webserver and click refresh to update these changes. your data will be updated in the www directory. to test it, go to http://localhost/name.php through your browser. you will be taken to your new web page where you will see the details of your php installation. step 4: configuring mysql you can begin configuring your mysql databases by opening the phpmyadmin panel in the menu. through here, you can open a new browser window. the admin username automatically sets to “root” after which you are prompted to provide a password. for now, you can leave the password field empty. you can also customize the mysql databases or create new ones based on your preference. if you are using cms software such as wordpress, they provide you with a database by default. step 5: setting the site to be publicly visible at this stage, your website is accessible just to the computer in which you installed the webserver application. this can be great if you want to use the web server for web development and testing practices. in this case, however, you want the rest of the world to see the contents of your site. to make it public, hit the wampserver icon and select the “put online” option. note that the apache settings file is programmed to deny access to connections from outside which aren’t the localhost. people clicking on your url will, therefore, receive a “403 forbidden” message. to rectify this problem, you need to change some two lines of code within the apache configuration file. locate the httpd.conf file in the wampserver menu inside the apache folder. scroll down further till you come across a code shown below: order deny, allow
deny from all delete it then replace it with: order allow, deny
allow from all restart all the services in webserver through the dedicated button in the menu, and your site will now be accessible to anyone from the internet. make sure to change any pc firewall settings that block web requests. also, forward the port 80 to your pc on your router. how to host your website on a linux machine just like on the windows os, to host a website on a linux machine, you need to install apache, mysql, and php. rather than installing them separately, lamp webserver provides you with a package that carries all the three important web-hosting applications. step 1: install lamp software amp can be installed in any versions of the linux os. you should be able to set up the webserver in the pc whether you prefer the command-line only ubuntu or a standard ubuntu desktop. to do that, enter the following simple line of command into the terminal: sudo apt install apache2 mysql-server php libapache2-mod-php7.0 the installation process may take a while due to the download of large volumes of data contained in the package. in the next step, ensure that you set up a password for the mysql root user then confirm it. otherwise, if you leave the field empty, you won’t be able to change the password after the lamp installation process. the password will also come in handy when you want to create other users or update your database. another important thing worth noting is that whenever you change the apache configuration, you have to restart apache by executing the command sudo /etc/init.d/apache2 restart. however, there is an exception when you carry out the process using the local .htaccess files. step 2: test the php operation lamp provides a test that can verify whether the php server is operational as well as check the available modules. to execute it, insert the test php file into the webserver root directory, /var/www/html/. as an example, create a test php web page called “name” then enter the following code into the web server root directory: sudo echo "" > /var/www/html/name.php after that, go to your browser and type http://localhost/name.php then hit enter. when it loads, it should show you your test php file. the running php version, configuration, and available modules will be displayed on your window too. you can add new php modules later through the ubuntu package manager in case you come across an application that requires it. the graphical package manager contains the available modules. you can also access it through the command line by entering the following code: apt search php | grep module. i find the latter much simpler. step 3: test mysql and its bind address at this stage, you need to confirm whether mysql installation was successful. this is because cms systems such as wordpress won’t run without it. enter the following command to execute the test: service mysql status. it should be running upon clicking enter, but if it doesn’t, restart the mysql server through the following code: “sudo service mysql restart.” also, check whether the bind address of mysql resembles that of your system. do this by typing this simple command: cat /etc/hosts | grep localhost. several results will show on your screen among which include your ip address. open the mysql configuration file and check whatever is listed there. scroll until you see the bind address of your pc. the figures displayed on that line should match those you saw earlier. in case they do not match, change it to finish the test. you can now use mysql command line client as a tool for the management of your databases. the admin credentials you had set during the mysql installation process will give you access to your server. you are now free to manipulate the mysql environment and can create a database. most cms usually create a database by default. however, you may need to do something extra like backup files or reconfigure tables. for that, you will need a database management tool. phpmyadmin is one of the most user-friendly tools used by experts for this job. it offers an interface for the mysql administration which provides a soft landing spot for those who aren’t well conversant with mysql and its commands. the next section shows you how to install phpmyadmin. step 4: phpmyadmin installation process type the command “sudo apt-get install phpmyadmin” to install it. if the installation fails, you will have to reconfigure other repositories before repeating the process. for instance, when you encounter a blue screen inquiring which web server you’d like to configure, press the space bar (the red cursor should be next to the “apache2”). when an asterisk appears, hit the enter button. a new prompt comes to your monitor inquiring whether phpmyadmin should create a default database for its exclusive use, click yes. now you will need to enter your admin username and password to create the database. restart the apache to complete the process. to log into phpmyadmin, type the following address on your browser: http://localhost/phpmyadmin/. enter the username and password in the fields provided then click go. it is important to note that the passwords you set for this entire process should be powerful because the web server software gives other people access to your pc. step 5: dns configuration you may want to configure your local web server to have a personal domain name such as exmple.com. to accomplish this, you should change the apache settings to accept requests from the internet. below are the particular steps for configuring your dns: make sure that your domain name of choice has an a record; it should point to a specific ip address. your dns records are updated automatically by your dns hosting service provider. to check whether the configuration was successful, use the dig tool which will return details containing your ip address, domain name, and an authority section. step 6: configuring of apache after downloading and installing the latest version of the lamp server, apache will be fully optimized to start hosting websites on your linux pc. here are the steps of a simple hosting configuration. they are specifically for name-based virtual hosts which you will use to support sites on your directory. first, disable the apache virtual host default by entering the command sudo a2dissite *default. go to the default storage directory called /var/www/html by typing this command line: “cd /var/www/html”. establish a new folder that will host your site. make sure to change your domain name from exmple.com to your desired name. use the command line: sudo mkdir desiredname.com. open the folder you just launched and create other four sub-folders or directories in it. these will serve the purpose of keeping your weblogs, files, and backups. type this command: sudo mkdir -p desiredname.com/public_html
sudo mkdir -p desiredname.com/log
sudo mkdir -p desiredname.com/backups after that, open a new virtual host file for your site through this command: sudo nano /etc/apache2/sites-available/desiredname.com.conf note that your domain name “desiredname.com” has been replaced by “desiredname.com.conf”. at this stage, you now need to create a configuration for your virtual host. use the block of code below to help you perform the procedure. you can copy paste it but remember to replace our arbitrary desiredname.com domain with your own as well as insert the error log command. <virtualhost>
serveradmin [email protected]
server_name desiredname.com
server_alias www.desiredname.com
located)
directory_index index.html index.php (this is the folder in which the files are saved)
document_root /var/www/html/desiredname.com/public_html (contains the name of your php or htm file)
loglevel warn
custom_log /var/www/html/desiredname.com/log/access.log combined
</virtualhost> to save these changes, press the control button + x followed by y then enter button to add the changes to the virtual host configuration file. finally, enable your site through this command: sudo a2ensite desiredname.com.conf. you will receive a prompt to restart apache to apply your new settings. these simple steps will have prepared your apache to hold your site. you can repeat the procedure for any other websites you would like to host on your lamp server on your linux pc. what are the advantages of hosting a website on your machine? hosting of websites through virtual hosting is a workable solution for most websites today. however, there are numerous reasons why you would want to shift to in-house hosting. here are some of these factors: it offers more control and flexibility once you host a website on your pc, you will be able to manage all its aspects from the web server installed on your pc. with virtually hosted servers, many permissions and constraints are tying you to use only what the web hosting service provider offers. in the case of technological changes or perhaps when you want to change your domain name, you have to contact the host provider. this hinders most web managers from making proactive decisions that would otherwise make their websites perform better. still, on flexibility, you can choose to offset some of your server expenditure by subletting space to small companies within your community, making you a small virtual server. cost note that cost can be both an advantage and a disadvantage. the good side of it is that you can host a website on most dsl connections. the only extra hardware needed is a switch and a web server. these equipment are readily available and can be found on second-hand terms for roughly $100. however if you already have a stable dsl connection, you need not spend on any additional connectivity infrastructure. a monthly saving of $10 will remit your capital in less than a year, allowing your in-house hosting to be self-sufficient. on the virtual hosting side, the expenditure increases as your website expands. that is attributed to the fact that you have to purchase more system admin services. learning of new skills with in-house hosting, you can acquire new tricks and maneuvers for setting up your site. this allows you to effect changes promptly. accessibility there may be no reputable web hosting companies within your geographical location. the use of different currencies and limited access to online payment methods may also deny you the chance of contracting a reliable web hosting company overseas. the cons of hosting a website on your pc in-house hosting has its downsides too. here are the major ones: lack of access to additional services virtual web hosting providers usually have a robust infrastructure that offers more space and bandwidth. additionally, they offer extra inventory for backup, security audit, load balancing, database management services and technical support. most of these services are either too expensive or inaccessible through in-house hosting. security this is the most serious threat to in-house hosting. as soon as you install the web server software in your pc, you allow other internet users to access your computer. consequently, using your work computer may expose you to hackers and automated malware that will either siphon or corrupt your data. with virtual hosting companies, this problem can be evaded. they usually provide software patches and robust firewalls to handle any security vulnerabilities on your web server. therefore, it is important to perform an in-depth security audit before opting for either of these hosting services. scalability your pc isn’t dedicated specifically to web hosting services; rather the web server software gives it the capability to perform the service. this means that you lack room for expansion in case your site’s traffic increases. more bandwidth, storage space, power, and cooling systems may be more of a far cry for in-house hosted sites. ability and skills web hosting companies are endowed with trained personnel. you, on the other hand, may have just a little knowledge on setting up web servers. the hiring of staff or training yourself bring about additional costs that lower the feasibility of in-house hosting. availability internet service providers usually put restrictions on the amount of data that their subscribers can use. web hosting requires a lot of bandwidth which may exceed the one provided by your isp through broadband connections. virtual hosting companies, on the other hand, have the necessary internet connectivity to fulfill the demands of their numerous clients. also, note that when your pc is undergoing a software upgrade, and you need to restart it severally, your web server software will be going down with it too. in the case of power outages, you will also receive a down time. cost to improve the reliability of your services, you may need to spend extra on equipment such as ups, backup systems, software patch handling systems, and maintenance services among others. a web hosting company can avail all these services in any of their packages. it is therefore evident that self-hosting your site still has some serious downsides. therefore, choose it after considering all its downsides. once your site begins to expand, you may have to find alternatives to in-house hosting. i’ve outlined some of the best options in the following section. alternatives to self-hosting a website there are different forms of web hosting other than in-house or self-hosting. here, we’ll look at virtual hosting and dedicated hosting. virtual hosting these are companies that host several sites on the same server. they are readily available and can offer services to simple websites for as little as $10 per month. virtual hosting providers provide free backup, technical support, several email addresses and a user-friendly interface. they also provide a scalability advantage. at an extra fee, their packages may also come with e-commerce tools such as a shopping cart and customer loyalty programs. despite being cheap, they have downsides too. you have minimum or no control over the operation of the server on which you are hosted. this means that you have to rely on the activities of the host and their staff for any changes you’d like to implement. some of the reliable vps hosting companies include bluehost, siteground, and inmotion hosting. also you might want to check out some of the cheaper vps providers as well. dedicated hosting dedicated hosting companies allow you to have a server dedicated solely to your site. they can offer you either a network connectivity for the server you bought or a menu with an array of services like backup and monitoring. it is slightly expensive since you pay for space, bandwidth, and power consumed in the data center. at an extra cost, they will provide you with firewall management, engineering time, bandwidth statistics info, and technical support. the primary advantage of dedicated hosting is that the processing power and speed are unlimited. they experience very little downtime as compared to vps hosting. having learned how to host a website on your computer, you can decide which option is best for you. however, for serious projects requiring cutting-edge infrastructure, i would recommend that you opt for either dedicated or vps hosting. the following two tabs change content below. bio latest posts jamie my name is jamie spencer and i have spent the past 5 years building money making blogs. after growing tired of the 9-5, commuting and never seeing my family i decided that i wanted to make some changes and launched my first blog. since then i have launched lots of successful niche blogs and after selling my survivalist blog i decided to teach other people how to do the same. latest posts by jamie (see all) interview – cameron james from anymail finder - march 26, 2020 the best standing desks 2020 – detailed buyers guides and reviews - march 25, 2020 how to make money as a kid in 2020 – 6 to 16 years old - march 19, 2020 categories web development post navigation what is a blog? – a guide to understanding the concept of blogging best free website builders 2020 4 thoughts on “how to host a website from your computer” raley june 18, 2019 at 6:18 am | reply thank you so much for detailing this, i’ve been struggling for weeks with which host to choose. anyway, i am looking for the cheap linux hosting other than redserverhost.com. can you suggest me some better options? thank you so much. kuldeep singh may 25, 2019 at 6:09 am | reply thanks for writing this awesome and knowledgeable article, which has give n me a lot of sense about hosting a own website. but here is my one more question, actually i wanna create own travel based company website so would it be right by hosting own or should take from someone . thanks jamie may 28, 2019 at 7:43 am | reply i’d always recommend that you host with a hosting company like bluehost or cloudways. arpith september 1, 2017 at 10:13 am | reply hi jamie, thanks for detailing this out. i have one query before i start following the steps you have mentioned here. “do i need to port forward so that the page is accessible from the internet?”. you haven’t mentioned this in the blog. i need to know this before hand as i have some issues in port forwarding from my router. so that i can solve that first. thanks in advance. arpith leave a comment cancel reply commentname email save my name and email in this browser for the next time i comment. recent posts interview – cameron james from anymail finder the best standing desks 2020 – detailed buyers guides and reviews how to make money as a kid in 2020 – 6 to 16 years old how to write a blog post – a guide for new & experienced bloggers best social media management tools 2020 categories amazon fba blog traffic blogging business cheat sheets content marketing design tips email marketing graphic design interviews make money online marketing photography questions social tech buying guides web development website cms wordpress best of the blog online business ideas that work how to build an amazon affiliate website best affiliate marketing platforms best blogging sites 103 ways to make money online create a professional email address best social media management tools affiliate marketing glossary what is a blog? free web hosting latest hosting reviews best vps hosting best magento hosting best cloud hosting best dedicated hosting cheap vps hosting hosting coupons best uk web hosting best web hosting for australia cheap web hosting cookie policy privacy policy site builder reviews shopify review squarespace review weebly review wix site builder review duda website builder review site links affiliate disclaimer cheat sheets tutorials and guides black friday / cyber monday © 2020 make a website hub