skip to main content css-tricks articles videos almanac snippets newsletter jobs guides back to top contact about archives advertise jobs license subscribe forums guest posting facebook twitter youtube instagram rss search for: search open search open navigation home / articles / ideas behind responsive emails author chris coyier 30 comments go to comments last updated jun 9, 2014 mobile responsive personalized marketing with mailchimp say you've designed an html email with 3 columns. because of limited and weird css support in email clients, email design is done with tables. that 3 column design looks great on large-ish screens, but it squishes awkwardly on small screens. theoretically a media query would save us here, but as we can't even count on floats we sure can't count on those. there is still a way though. in this article, i'm just going to poke at some ideas around responsive email. these are not robust, production-ready ideas, i just thought it was fun to think about. it was inspired by listening to fabio carneiro speak recently. fabio works for mailchimp doing all this hardcore email layout wrangling and shared some of the ideas behind responsive emails in that talk. he also has a treehouse course on email. jason rodriguez also wrote a bit on the topic recently. rows with align="left" here's some chunks in a layout: you might think: each of those will be a <td>. but no, if that was the case you'd never be able to get them to wrap in the limited css world of emails. actually, each chunk is a <table align="left">. align is an ancient, deprecated attribute, but it's still supported in all email clients. it's sort of like float, but we can't use float. i think of it more like you're making the table behave like an inline-block element. you can control it's width, it can sit on the same line as other stuff, and it can still wrap. so that would be like: <table class="main-wrapping-table">
  
  <tr>
 
     <td>
  
         <table align="left" style="width: 33.33%">
         </table>

         <table align="left" style="width: 33.33%">
         </table>

         <table align="left" style="width: 33.33%">
         </table>

    </td>

  </tr>

</table> there would be slews of other inline css in there as well, doing centering and whatnot, but this is the layout concept. extending that idea to some other rows with different numbers of chunks, we get this: not too bad of a base for using nothing any email client can't use. breakable rows with min-width some email clients support min-width. so if we put that on the chunks that need it, we can get those rows breaking at a reasonable place. you could put the css right on the table chunk, like: <table align="left" style="width: 33.33% min-width: 200px;" class="chunk">
<table> a bit better. now each chunk will break where it needs to and never get too squishy. fill space with @media query some email clients support @media queries, so if that's the case, we'll target those chunks and make sure they fill the space better when those breaks occur. /* figure out where the breaks happen and use that in the media query */
@media (max-width: 400px) {
  .chunk {
    width: 100% !important;
  }
} a little bit better yet. you could do better than i did there, making sure all the breaks all happen just as you plan. not too wide with max-width just as too-squishy is bad, too wide can be bad too. might as well limit the container table in browsers that support max-width. <table style="max-width: 600px; margin: 0 auto;" class="main-table">

</table> demo again, this isn't quite production-ready, it's just demonstrating the ideas. see the pen "responsive" email by chris coyier (@chriscoyier) on codepen. if you want production-ready, i'd probably use email blueprints by mailchimp. seems like they use a rigid, fixed breakpoint. so it just either displays a "desktop" or "mobile" version depending on screen space available. "adaptive" design, as it were. i could see that being desireable in html email design. our learning partner wanna learn modern css layout? laying out designs on the web with css has gotten a lot more powerful in recent years. css grid and flexbox are incredibly powerful tools for that, and frontend masters has a complete learning course on them from jen kramer. wanna learn modern css layout? laying out designs on the web with css has gotten a lot more powerful in recent years. css grid and flexbox are incredibly powerful tools for that, and frontend masters has a complete learning course on them from jen kramer. comments jay permalink to comment# may 25, 2014 good stuff. thanks! shaz3e permalink to comment# may 25, 2014 a cool idea but i am wondering if email client can read external css/less/scss with media queries why we are creating email templates on tables when it could be make on divs and that will make life more easier. gumnos permalink to comment# may 25, 2014 i’m pretty sure that most mailers wouldn’t allow it (i’d have to test a variety to make sure), but it has the same information-exposure vulnerability as allowing external images to be loaded. each email could reference http://example.com/${unique_tracking_token}.css which would then let the sender know if/when an email was opened/viewed. so i’d expect that, even if it was possible, the user would need to explicitly enable it. felix susanto permalink to comment# may 25, 2014 you can’t load external css or at least not all email client supports it, to my knowledge you can’t rely on layout with div either, as email clients have varying supports of css. chris have some article and guidelines on this topic, and some explanation why we have to stick with table layouts. and last, one way too use css preprocessor such as less, sass is to compile them into regular css. put inyo head tag, and use a link to convert them into an inline style css. hope this helps felix susanto permalink to comment# may 25, 2014 sorry, on my last comment what i meant by ‘link’ to convert is to use this link : premailer that can be found on chris’ article using-css-in-html-emails-the-real-story hope this helps! shaz3e permalink to comment# may 26, 2014 i am confused with media queries i need to test it out once to clear mind. nathan permalink to comment# may 27, 2014 email will not read external styles. add them to the head of your document then paste them in to mailchimp’s nice tool for dumping your styles inline. http://templates.mailchimp.com/resources/inline-css/ armstrongest permalink to comment# may 28, 2014 one reason they don’t read external styles is that you could easily record when emails are opened with some creative server-side code. you’d have ip addresses and assuming some query-string tomfoolery, you’d be able to track habits of people pretty clearly. there are privacy implications. although you may not do this… there are many email marketers who most definitely would. only google is allowed to track individuals (and you wondered why google analytics was free to use for 99% of its user base) :-) robert mion permalink to comment# may 25, 2014 insightful article as usual, chris! to piggy back off felix: most email clients completely remove any head and even body tags, so inline styles is your only safe bet. luckily there’s [premailer] (http://premailer.dialect.ca “premailer”) to help you inline all your external or internal styles when ready. if you want more great resources on where to start with designing responsive html emails, i wrote an extensive tutorial a few months ago. it has a free template you can use to start making your own email. just click on the link to my website, or click here for the tutorial. nour akalay permalink to comment# may 25, 2014 i know that you’re not a big fan of frameworks chris, but since you are recommending mailchimp why not ink by zurb it’s reponsive and claims to let you: quickly create responsive html emails that work on any device & client. even outlook. yeswanth permalink to comment# may 25, 2014 excellent article… really like it …. dude… it is good article not only in the sense of the relative layout in email clients. but it is also saying, what e-mail clients won’t allow us to use, what they allow…. thanks chris jack permalink to comment# may 25, 2014 nice one man! so its better to use the mailchimp mail client for this chris? mike permalink to comment# may 26, 2014 i have been using this http://www.emailonacid.com/blog/details/c13/emailology_a_free_responsive_email_template_using_media_queries_-_part_i never had a problem. eric cavazos permalink to comment# may 26, 2014 i work as a front-end engineer, but in a marketing department so email development is part of my daily life. sadly… i really like zurb’s email templates, http://zurb.com/playground/responsive-email-templates . i know you have mentioned them before on your show. i think what troubles people about email is when you start adding images, borders, ctas and all of the pieces together while trying to maintain a balance and with good percentages without going insane. i think this is what frameworks like 960grid, bootstrap, zurb have been saving people from. ted goas permalink to comment# may 26, 2014 chris, these are some great ideas to think about. thank you for giving responsive email some air time! my main take-away is how to approach responsive emails in a way that doesn’t require media queries. one of my current pain points is what to do for email clients that don’t support media queries and the flexibility that comes with them. at the moment: gmail, android mail, mailbox; popular email clients that shouldn’t be ignored. what you touched on above gives us something to think about. thanks + cheers! aaron permalink to comment# june 3, 2014 media queries in emails in my experience are only used for iphones, to swap out the main hero image for a more mobile friendly sized (320px) image. from what i can tell the rest of the code above should allow your emails to respond to most other devices. simple percentage widths and all! ben demeyere permalink to comment# may 26, 2014 i agree with using the mailchimp blueprint email templates. they are fantastic and have helped me out in the past. i feel so much appreciation for the guys and girls who must work on those! brendan permalink to comment# may 27, 2014 margin: 0 auto isn’t going to work in a few of the most popular clients, you could use align=”” or even though. what you can/can’t use http://www.campaignmonitor.com/css/ chris coyier permalink to comment# may 27, 2014 i think the mailchimp templates even just rock a <center> tag around everything. paul van steenoven permalink to comment# may 27, 2014 floating tables is a dangerous thing. i work in e-mail design and especially outlook 2007, 2010 and 2013 they handle floating tables quirky, adding margin and depending its contents it stacks the tables like a ladder revealing white space. the safest way across all email-clients, in my experience, is to still handle columns as td’s and put the min-width and display block, width 100% in the media query. shaun dillon permalink to comment# may 27, 2014 i’ve made quite a lot of responsive emails over the past couple of years and there are a few points i’d recommend: never use horizontal padding, want a space somewhere? use an empty table cell (mso and others have weird spacing issues) create the desktop layout entirely with inline styles, any mobile things can go in style tags in the head (!important flags are needed) use attribute selectors in the css instead of class selectors, i’ve never actually come across any programs that have issues with this, but i’ve read about some that have. (so it’d be block[class=”blockclass”] { }) campaign monitor is your friend. gmail app on android sucks. ben carver permalink to comment# may 27, 2014 interesting, and very sound ideas, except outlook likes to add extra space and the three table alignment needs lots of extra coding to show up, lest they wrap. go ahead; send that code to yourself to an outlook 2013 client. you need to add some border-collapse settings to the containing table, and for good measure reduce the font-size and line-height of the containing td to ensure everything butts up. outlook has a bad habit of seeing any spaces as a non-breaking space character. chris coyier permalink to comment# may 27, 2014 that’s good to know. just to say it again as i said in the article: this isn’t production ready code. it’s just to introduce some of the clever thinking that goes behind making “responsive” emails from a foundation that doesn’t require media queries or other more advanced css. neo permalink to comment# may 30, 2014 @robert, excellent tutorial, thanks! raph permalink to comment# may 30, 2014 as to email clients not being able to render responsive emails, here is what i do. i simply take my mailing list, filter out gmail and other smart email clients and then only send the responsive version to them. all other receive a regular version. no need to try to put the detection in the mail itself when you can simply filter out your mailing list. lucre van breda permalink to comment# june 5, 2014 i don’t think outlook supports percentage widths? benjamin knight permalink to comment# june 9, 2014 having spent many man hours in the trenches of email code on “big production” emails like yelp’s weekly, i can say without a doubt that the best overall approach to email is using flexible widths as a cross-device approach. use media queries for small enhancements when you have them (e.g. margin adjustments & image dimensions). tell designers to avoid multi-column email designs and keep the message as simple as possible. when multiple columns are necessary, you can use min-width on the container to force mobile clients to zoom out a little bit which is often slightly nicer looking and more legible than extremely narrow columns of large text. chris beran permalink to comment# june 10, 2014 strangely, max-width doesn’t work on ios, so i’ve had to use something like this instead: @media only screen and (min-width: 606px) { .content {width: 605px !important;} } peter krogh permalink to comment# june 11, 2014 i’ve been trying ink (http://zurb.com/ink/) framework. i had some good experience with this for newsletter in mails. it supports a lot of clients, browsers and mobile devices. it got some good rules to follow and it doesn’t take long to get started! andrew leach permalink to comment# june 18, 2014 thanks for sharing, a great article as usual. this comment thread is closed. if you have important information to share, please contact us. related how do you stay up to date in this fast⁠-⁠moving industry? a good start is to sign up for our weekly hand-written newsletter. we bring you the best articles and ideas from around the web, and what we think about them. email address subscribe facebook @csstricks twitter @css youtube @realcsstricks instagram @real_css_tricks rss feed css-tricks* is created, written by, and maintained by chris coyier and a team of swell people. the tech stack for this site is fairly boring. that's a good thing! i've used wordpress since day one all the way up to v17, a decision i'm very happy with. i also leverage jetpack for extra functionality and local for local development. *may or may not contain any actual "css" or "tricks". other nav contact about guest writing jobs advertise license subscribe all authors codepen codepen is a place to experiment, debug, and show off your html, css, and javascript creations. flywheel logo flywheel css-tricks is hosted by flywheel, the best wordpress hosting in the business, with a local development tool to match. shoptalk is a podcast all about front-end web design and development. css-tricks presents 📅 upcoming front-end conferences css-tricks presents the power of serverless for front-end developers