programs back to menu programming and development back to menu programs front end web developer full stack web developer java developer cloud developer cloud devops engineer c++ data structures and algorithms data engineer introduction to programming ios developer react blockchain developer android developer android basics artificial intelligence back to menu programs ai for business leaders intro to machine learning with tensorflow ai product manager intro to machine learning with pytorch data structures and algorithms machine learning engineer ai programming with python deep learning artificial intelligence for trading computer vision natural language processing deep reinforcement learning artificial intelligence cloud computing back to menu programs cloud developer cloud devops engineer data science back to menu programs data streaming data visualization data structures and algorithms programming for data science with r data engineer marketing analytics data analyst predictive analytics for business data scientist business analytics programming for data science with python business back to menu programs product manager ai for business leaders ux designer ai product manager data visualization marketing analytics predictive analytics for business digital marketing business analytics autonomous systems back to menu programs sensor fusion engineer c++ data structures and algorithms self driving car engineer intro to self-driving cars robotics software engineer flying car and autonomous flight engineer career full catalog career back to menu career prep get hired hire our grads student success become a mentor become an instructor for enterprise back to menu overview our approach solution about us sign in get started programs programming and development programs front end web developer full stack web developer java developer cloud developer cloud devops engineer c++ data structures and algorithms data engineer introduction to programming ios developer react blockchain developer android developer android basics artificial intelligence programs ai for business leaders intro to machine learning with tensorflow ai product manager intro to machine learning with pytorch data structures and algorithms machine learning engineer ai programming with python deep learning artificial intelligence for trading computer vision natural language processing deep reinforcement learning artificial intelligence cloud computing programs cloud developer cloud devops engineer data science programs data streaming data visualization data structures and algorithms programming for data science with r data engineer marketing analytics data analyst predictive analytics for business data scientist business analytics programming for data science with python business programs product manager ai for business leaders ux designer ai product manager data visualization marketing analytics predictive analytics for business digital marketing business analytics autonomous systems programs sensor fusion engineer c++ data structures and algorithms self driving car engineer intro to self-driving cars robotics software engineer flying car and autonomous flight engineer career full catalog career career prep get hired hire our grads student success become a mentor become an instructor for enterprise overview our approach solution about us sign in get started new! nanodegree program become a c++ developer learn c++, a high-performance programming language used in the world's most exciting engineering jobs -- from self-driving cars and robotics, to web browsers, media platforms, servers, and even video games. download syllabusenroll now estimated time 4 months at 10 hrs/week enroll by march 27, 2020 get access to classroom immediately on enrollment prerequisites intermediate programming see prerequisites in detail syllabus download syllabus syllabus learn c++ by coding five projects get hands-on experience by coding five real-world projects. learn to build a route planner using openstreetmap data, write a process monitor for your computer, and implement your own smart pointers. finally, showcase all your newfound skills by building a multithreaded traffic simulator and coding your own c++ application. get hands-on experience by building five real-world projects. hide details 4 months to complete prerequisite knowledge to optimize your chances of success in the c++ nanodegree program, we recommend intermediate knowledge of any programming language. c++ foundations learn how to develop, compile, and execute c++ programs as well as syntax, functions, containers, and how to link together multiple files.route planner object-oriented programming (oop) learn to build classes, interfaces, and generic templates to create an object-oriented c++ program. learn how modern c++ includes many tools for writing clean, reusable code.process monitor memory management learn to control static and dynamic memory in c++ using the resource acquisition is initialization pattern, pointers, references, and move semantics.memory management chatbot concurrency c++ supports running multiple execution paths in parallel. learn how to launch process and threads in order to execute logic in parallel. then advance to thread synchronization and communication, to experience the full power of concurrent programming.concurrent traffic simulation capstone project in your capstone project, you will put all of your new c++ skills to use! utilize the core concepts from this nanodegree program - object-oriented programming, memory management, and concurrency - to build your own application using c++.capstone project: build your own c++ application need to prepare? check out the introduction to programming nanodegree program or intro to self-driving cars nanodegree program to learn some programming. according to glassdoor, the u.s. national average base pay for a c++ developer is over $103,000! all our programs include real-world projects from industry experts with real world projects and immersive content built in partnership with top tier companies, you’ll master the tech skills companies want. technical mentor support our knowledgeable mentors guide your learning and are focused on answering your questions, motivating you and keeping you on track. personal career coach and career services you’ll have access to career coaching sessions, interview prep advice, and resume and online professional profile reviews to help you grow in your career. flexible learning program get a custom learning plan tailored to fit your busy life. learn at your own pace and reach your personal goals on the schedule that works best for you. program offeringsfull list of offerings included: enrollment includes: class content real-world projects icon-checkmarkcheckmark project reviews icon-checkmarkcheckmark project feedback from experienced reviewers icon-checkmarkcheckmark student services technical mentor support new icon-checkmarkcheckmark student community improved icon-checkmarkcheckmark career services personal career coaching new icon-checkmarkcheckmark interview preparations icon-checkmarkcheckmark resume services icon-checkmarkcheckmark github review icon-checkmarkcheckmark linkedin profile review icon-checkmarkcheckmark resume shared with 95+ employers new icon-checkmarkcheckmark succeed with personalized services we provide services customized for your needs at every step of your learning journey to ensure your success! experienced project reviewers technical mentor support personal career coach get personalized feedback on your projects reviews by the numbers 2000+ project reviewers 1.8m projects reviewed 4.85/5 reviewer ratings 3 hour avg project review turnaround time reviewer services personalized feedback unlimited submissions and feedback loops practical tips and industry best practices additional suggested resources to improve succeed with personalized services we provide services customized for your needs at every step of your learning journey to ensure your success! project reviewers technical mentor support career coaching get personalized feedback on your projects reviews by the numbers 2000+ project reviewers 1.8m projects reviewed 4.85/5 reviewer ratings 3 hour avg project review turnaround time reviewer services personalized feedback unlimited submissions and feedback loops practical tips and industry best practices additional suggested resources to improve learn with the best david silver head of curriculum david silver leads the udacity curriculum team. before udacity, david was a research engineer on the autonomous vehicle team at ford. he has an mba from stanford, and a bse in computer science from princeton. stephen welch instructor stephen is a content developer at udacity and has worked on the c++ and self-driving car engineer nanodegree programs. he started teaching and coding while completing a ph.d. in mathematics, and has been passionate about engineering education ever since. andreas haja instructor andreas haja is an engineer, educator, and autonomous vehicle enthusiast. andreas now works as an engineering professor in germany. previously, he developed computer vision algorithms and autonomous vehicle prototypes using c++. student reviews 4.4 (157) victor n. i guess i expected to do a bit more than what i did with the initial project, code-wise. however, all that was really done was to decompose the route planning problem with respect to the a* algorithm. i did learn some new and cool things, such as utilizing build tools. i challenged myself to build the project locally instead of using the workspace, because i really wanted to learn and it worked well for me with some trial and error. overall, i was looking for more insight and practice, and i believe this course provided that for me. it exceeded my expectations in some ways and challenged me. i enjoyed it. miguel f. the content is superb. the videos and small exercises are very conformatable to follow, and i found the project very acessible so far. i appreciate some more detail on setting up the environment (in my personal computer) with vs code, the required libraries and so on. there is some information scatered in the course pages, and in the github repositories, but i found it challenging to get it all setup. i think a tutorial showing how to setup everything from scratch (in windows, mac and linux) would be very helpful to future students! :) hsin-wen c. after reading the reviewer's review carefully fix all required errors, i finally can execute and show the beautiful open street map route planner on my gpu enabled workspace and pass my 1st project!! reading review and saw the letter reviewer wrote to me and said wow you did it and happy new year😁!! i feel very warm in my heart. thank you, udacity reviewer. i'll also try to adapt time to catchup kaggle, leetcode and hackerrank discuss! i'm extremely satisfied:d!! francisco v. i love the way is designed and the richness in content of nano degrees at udacity. but i have a lot of problem trying to have projects on time. i think the knowledge acquired so far is not enough to do the project by myself, so i will continue working hard and will do the project later. my number one goal in taking this nano-degree is to learn c++ programming. i am not a fan of due date projects, but i am a fan of learning. thanks! regards, francisco j. virgen alexandre s. i like the program so far. only two minor nitpicks: 1) there are some notebooks where the "explain" button doesn't work, pressing it results in a message saying that some files are missing; 2) it would have helped a lot if i could debug the execution of the project. debugging was mentioned, but only of a single file, while the project has several files and requires appropriate configuration to be compiled with the appropriate flags for debugging. luis l. i am very happy to successfully finish my first project on the c++ nanodegree that i personally find very interesting but also quite challenging and difficult. i consider that the skills required to complete the project are far of the theory explained during the course but on any case thanks to the close and patient support of mentoring and hub qa forums i could complete. i am very excited to continue! next related nanodegree programs intro to programming nanodegree program learn to code in python beginner self-driving car engineer nanodegree program learn to code self-driving cars advanced program details program overview - why should i take this program? why should i enroll? c++ is a compiled, high-performance language. robots, automobiles, and embedded software all depend on c++ for speed of execution. this program is designed to turn software engineers into c++ developers. you will use c++ to develop object-oriented programs, to manage memory and system resources, and to implement parallel programming. what jobs will this program prepare me for? c++ is the industry standard for high-performance computer programming. as such, advanced knowledge of this programming language can open the doors for you to work in a variety of industries, including c++ engineering, robotics software, iot, mobile communications, video game development, operating systems, networking, ai, embedded systems, and more. your opportunities and roles might include: c++ software developer self-driving car engineer robotics software engineer embedded systems engineer entry-level game programmer how do i know if this program is right for me? this program is right for you if you’re an intermediate-level programmer familiar with functions and classes who wants to become a c++ developer or pursue a career in robotics software, iot, mobile communications, video game development, operating systems, networking, ai, embedded systems, and more. enrollment and admission do i need to apply? what are the admission criteria? there is no application. this nanodegree program accepts everyone, regardless of experience and specific background. what are the prerequisites for enrollment? to optimize your chances of success in the c++ nanodegree program, we recommend intermediate knowledge of any programming language. if i do not meet the requirements to enroll, what should i do? for students who have little or no coding background, our introduction to programming nanodegree program is an opportunity to learn object-oriented programming in python. if you are interested in self-driving cars and have no programming experience, the intro to self-driving cars nanodegree program will teach you the basics of object-oriented programming in c++, as well as linear algebra and calculus. tuition and term of program how is this nanodegree program structured? the c++ nanodegree program is comprised of content and curriculum to support five (5) projects. we estimate that students can complete the program in four (4) months working 10 hours per week. each project will be reviewed by the udacity reviewer network. feedback will be provided and if you do not pass the project, you will be asked to resubmit the project until it passes. how long is this nanodegree program? access to this nanodegree program runs for the length of time specified in the payment card above. if you do not graduate within that time period, you will continue learning with month to month payments. see the terms of use and faqs for other policies regarding the terms of access to our nanodegree programs. i have graduated from the c++ nanodegree program, where should i go from here? we highly recommend the self-driving car engineer, robotics software engineer, and flying car and autonomous flight engineer nanodegree programs. all of these programs use c++, and as a graduate of the c++ nanodegree program, you’ll have the coding skills necessary to succeed in these programs and the opportunity to specialize in specific areas of robotics and autonomous systems. can i switch my start date? can i get a refund? please see the udacity program faqs for policies on enrollment in our programs. software and hardware - what do i need for this program? what software and versions will i need in this program? for this nanodegree program, you will code with c++17. an internet connection is required. all coding can be done in our gpu-enabled linux workspace that runs in your browser.show less become a c++ developer download syllabus enroll now featured programs product manager ai for business leaders intro to machine learning with tensorflow data streaming ux designer java developer ai product manager sensor fusion engineer data visualization cloud developer cloud dev ops engineer c++ data structures and algorithms marketing analytics data engineer android basics android developer ios developer business analytics data analyst front end web developer full stack web developer intro to programming intro to machine learning with pytorch machine learning engineer predictive analytics for business programming for data science with python react only at udacity artificial intelligence deep learning digital marketing flying car and autonomous flight engineer intro to self-driving cars machine learning engineer robotics software engineer self-driving car engineer udacity schools school of artificial intelligence school of autonomous systems school of business school of data science school of programming school of cloud computing resources catalog career resource center career services hire talent get hired student success udacity talks scholarships what is ai? talk to an advisor programs veterans georgia tech company about blog in the news jobs become an instructor udacity intersect enterprise udacity for enterprise hire talent support contact us help and faq service status tech requirements © 2011–2020 udacity, inc. legal & privacy site map united states china "nanodegree" is a registered trademark of udacity. © 2011–2020 udacity, inc. udacity is not an accredited university and we don't confer traditional degrees. udacity nanodegree programs represent collaborations with our industry partners who help us develop our content and who hire many of our program graduates. we use cookies to optimize site functionality, personalize content and ads, and give you the best possible experience. learn more accept cookie preferences