home articles podcast tabletop graphic design about menu home articles podcast tabletop graphic design about solvability september 13, 2014 designing competitive strategy games is a constant fight against solvability. it's a struggle to make a system simple enough to understand, yet complex enough that players can't figure out the best way to play and then always play that same way. pure solution vs. mixed solution it's a much different situation if a game has a pure solution rather than a mixed solution. to understand why, we'll first have to define those terms. a pure strategy is a complete definition of how to play a game. it's a set of instructions describing the move the player should make for every situation they could face. if a certain pure strategy is the best way to play the game, we'll call that a pure solution. if you know a pure solution for a game, it's hardly a game anymore because there aren't any actual decisions left for you; you simply follow the instructions of the pure solution. a mixed strategy is a set of pure strategies where you assign a probability to each one. so instead of your instructions being something like "if the opponent does x, i'll do y," it's more like "if the opponent does x, i'll do y 30% of the time and z 70% of the time." if a certain mixed strategy is the optimal way to play, we'll call that a mixed solution. if you knew the mixed solution for a game, it sounds like just as bad of a situation as if you knew a pure solution. you still wouldn't be making any decisions, just randomizing across a set of choices. but this is not correct; there's still a lot for you to do in the case of a mixed solution. to understand why we'll have to look more closely on what playing "optimally" really means. playing optimally we said that if you had several possible mixed strategies, the one that lets you play optimally we'll call a mixed solution (this is also a nash equilibrium). there's a lot of potential confusion there because the word optimal has two meanings: an ordinary english meaning and a specific mathematical definition. this article is always referring to the mathematics meaning, not the everyday usage of the word that means "the best way to play." the math meaning is that playing optimally is playing least exploitably. let's see what playing exploitably looks like. if you were playing rock, paper, scissors and you decided to play rock 100% of the time, that is extremely exploitable. your opponent could pick up on that and shift to playing paper 100% of the time. your opponent can exploit your strategy so fully that your win rate goes down to 0%. if instead you play rock only 80% of the time (and paper 10%; scissors 10%), that's still a bad idea but it's a bit less exploitable. your opponent could still play paper 100% of the time, but at least you'll win 10% of the time, rather than 0%. if you want to be the least exploitable possible, you'll have to play each option 33% of the time. if you do that, there's no strategy your opponent can use to do better than you. that's the optimal mixed strategy to simple rps. optimal is not "best" playing optimally sounds like the best you can do, but if your goal is to win a tournament, then playing optimally is very likely not to be the best idea. imagine you entered a rock, paper, scissors tournament and face a player who is known to play rock 100% of the time and they do exactly that against you. if you play optimally, you'll play each option 33%, so each hand of rps there's a 33% chance you'll lose. meanwhile, another player in the tournament could choose to play 100% paper when facing the 100% rock player. your so-called optimal strategy has a much higher chance of losing and getting you eliminated from the tournament than if you had played 100% paper, too. by choosing to play optimally, you gave up a massive advantage that was right there for you to take. your opponent was ridiculously exploitable, but you chose not to capitalize on it. that's poor play if your goal is to win the tournament. this is an extreme example but the concept is still true even if the opponent was playing 40% rock, or even 35%. what if you do play 100% paper against the 100% rock player, but after several rounds of play they change their strategy? it's possible that they could exploit you because now you strayed from optimal play. yes, that's correct, but it's still worth it to try. if you're worried about your opponent changing their strategy to exploit you, then you don't have to go all the way from 33% paper to 100% paper. if you went up to, say, 40% then you're more likely to win this match than someone who stuck to 33%, but you're still not all that exploitable. also, how good is your opponent at a) recognizing that you strayed from optimal and b) correctly implementing a strategy against that? it's entirely possible that you are better at those things, in which case you should definitely exploit their strategy. as they slowly adjust to that, you adjust faster. donkeyspace the term donkeyspace, coined by frank lantz, describes the space of suboptimal plays. as described in the previous section, a good player should intentionally enter donkeyspace (in other words: play in an exploitable way) in order to exploit opponents who are also playing in donkeyspace. if both players are good, they each might dance through different regions of donkeyspace, jockeying for advantages. it's important to have some perspective here. you might be thinking that everyone is going to play optimally so there's no dance through donkeyspace in high level play. that's laughable if you think about actual competitive games though. first, even at a high level, it's very common for players to play far from optimal. second, it's highly unlikely that any—much less all—opponents will be playing optimally or even close to it. in a good competitive game, it's incredibly difficult to know what optimal play even is. there can be rules of thumb, but to know exactly the right probabilities in which to play a mixed strategy of exactly the right moves in a specific game state that could have thousands of variables? even in a popular, well-understood game like poker, optimal play is not known perfectly and in practice players stray from it considerably. knowing optimal play in pandante or yomi is way more hopeless than in poker. remember that when other players are playing non-optimally, even if you did know how to play optimally and even if you could perfectly execute the mixed solution, you still need to closely monitor your opponents and react to their styles in order to maximize your win rate. there are several other reasons why actually executing an optimal mixed strategy is extremely difficult, even if you did somehow know what it was: people are very bad at actually playing randomly, so it would be very difficult to choose some certain option 42.3% of the time, for example. when people fail to play randomly, they are probably falling back on tendencies they do not know they have, but that you can detect and exploit. people cannot help but let their personalities spill over into decisions about how conservative or risky they are. if it's a real-time game, then skills at timing and physically executing the right moves (such as a difficult combo in a fighting game or a precise shot in a shooter) mean no one is ever anywhere near playing mathematically optimally. item 2 on that list is especially interesting. in two studies by lewicki, et al (1997 and 1998), they demonstrated that people learn patterns without knowing that they learned them and without being able to explain or express what they learned. subjects were shown four quadrants of numbers and had to press one of four buttons corresponding to the quadrant containing a certain number. they did several trials of this, but weren't told that the location of the numbers across trials was not random. the locations followed a complex set of 10 rules. as subjects did more and more trials, they were able to perform more and more quickly, yet they weren't aware of there being any pattern and no subjects could explain a pattern even after they were informed one existed and even when they were offered $100. furthermore, when the underlying pattern was secretly replaced with pure randomness, the subjects immediately did far worse. hilariously, even the subjects who were fellow psychology professors in lewicki's department who were aware of lewicki's research were adamant in their belief that the trials containing a secret pattern were actually random. they learned to exploit the pattern, yet were convinced it didn't exist. the point is that your unconscious mind will make you perform mixed strategies imperfectly, and you'll fall into patterns you won't know you're doing. and then your opponent will pick up on those patterns and be able to exploit them, even if your opponent isn't aware that's happening. mixed strategy games and dances through donkeyspace involve interesting battles of unconscious minds vs. other unconscious minds in addition to the part where conscious minds might disagree on what optimal play even is. pure solution games degenerate faster than mixed solution games so in a game with a mixed solution, you still must be highly sensitive to what your opponent is doing. you have be able to detect how far they are straying for optimal play and then you have to be able to correctly counter that strategy. these are very difficult things to do and they involve, among other things, your unconscious mind picking up subtle patterns. in a game with a pure solution, you do not have to care what your opponent will do, ever. if you know that pure solution, it doesn't matter what the opponent tends to do or what you think is in their mind, etc. you should follow the optimal script and there's no gameplay left. it's also very important to think about how a game with a mixed solution looks vs. one with a pure solution when the playerbase is on their way to knowing that solution but isn't fully there yet. they're learning more and more about each game over time, they're approximating what optimal play is more and more closely. for the game with the pure solution, that means pockets of the game here and there become entirely about memorization and not about what the opponent is doing. for example, solved endgames in chess are this way (but not chess 2, because the midline invasion rule prevents all those solved endgames from happening). openings in chess (but not chess 2) are another good example of that. as more and more is known about chess over the years, the more structured the opening books become (the set of known-good opening moves) and the more important memorizing them becomes so that you don't enter the midgame at too much disadvantage. meanwhile, when we get closer to an approximation of a mixed solution—in poker, pandante, or yomi for example—these games do not start to collapse into memorization. they are still about being very responsive to what your opponent is doing. and while these approximations get closer to a complete mixed solution over time (which will not happen for yomi in our lifetimes), remember that everyone is in donkeyspace. even when there are lots of good players, they aren't literally playing optimally at every single step. everyone is in some sort of donkeyspace and they disagree on who is where. playing the game is in some way a method of resolving that debate. "i think i should block 42% of the time in this particular situation," while another player believes blocking 60% is correct. they each try to exploit the other's incorrect approximation, if they can even detect it in the first place. from a design standpoint, games with mixed solutions have an inherent advantage in fighting against solvability. it's much safer to design a game that is still very interesting even if solved than it is to design a game that necessarily degenerates closer and closer to pure memorization and no decisions as it gets closer to being solved. making pure solution games vs. mixed solution games as i've explained, pure solution games are dangerous to make. on the one hand, if your game is deep enough then you could delay people finding the solutions for a very long time. chess and go have been around for many centuries without full solutions being known. on the other hand, you'd be hard-pressed to make a pure solution game that stands up anywhere near as long as those games. checkers is already solved, for example. furthermore, even if you have a game as deep as chess, chess shows that memorization becomes more and more of what a pure solution game is about as the playerbase gets better. that's an unfortunate fate for a competitive multiplayer game. there's also some irony there. if i told you that a certain game had perfect information (you know the full state of the game at each moment you have to make a decision) and that it had no randomness, then you'd probably say it sounds very skill-based. if you like skill-based games, you'd say we're off to a good start. but actually, we just guaranteed that this game has a pure solution and that it will necessarily become less about skill (decisions in-the-moment) and more about memorization as the game develops. a similar game that had some unknown elements, hidden information, and/or randomness could actually be more skill-testing, not less skill-testing. so in creating a design, i recommend looking for what those unknown elements will be. what that hidden information will be. what that random element will be. randomness has a real stigma, but it's important to understand that it's a valid tool to keep your game out of the dangerous pure solution category. kongai my game kongai is an example of that. you make two decisions per turn and each of those decisions is double blind. that means you make the decision at the same time the opponent makes theirs, then you simultaneously reveal those decisions. this very much helps against solvability (it's no longer a perfect information game), but even then, the game would be dangerously solvable without some other unknown elements. i used randomness in hit rates (just like in the pokemon game kongai is based on) as well as randomness in proc rates (the chance that a move does a special thing on hit). this worked extremely well in fighting against solvability. those hit and proc percentages make it very, very difficult to compute the possibility tree several moves ahead. some kongai players intent on finding mixed solutions had to zero in on the most pared down, toy examples you can imagine. they tried to find out optimal play given a certain lineup of characters vs another certain lineup, with a certain set of items equipped, in the endgame only when each team was down to its last character so no switching or intercepting was possible, and hit points were down to the end. in this microscopic portion of the game, it took them a dozen pages of analysis to determine the right play. doing this for the real full game is basically unthinkable. conclusion competitive multiplayer games have to strive to be as unsolvable as possible while at the same time being understandable to players. games with pure solutions may seem skill-based, but over time will necessarily degenerate to becoming pure memorization. meanwhile, mixed solution games remain strategically interesting far, far longer. in order to make a game with a mixed solution, incorporate some sort of unknown elements, hidden information, or randomness. if your game is real-time rather than turn-based, you're even better off. tags set1 designing pandante → best of sirlin.net playing to win book codex design (23 articles) designing pandante blivand design designing yomi game balance and yomi designing puzzle strike street fighter hdr articles balancing puzzle fighter solvability slippery slope subtractive design multiplayer game balance: part 1: definitions part 2: viable options part 3: fairness part 4: intuition game balance handout tutorial videos: street fighter tutorial smash bros. brawl tutorial more articles... chat my tabletop games | my online games | playing to win | recommended books | about | contact